"""Initial migration with job posting models

Revision ID: ccc92a45394a
Revises: 
Create Date: 2025-08-08 11:25:48.907225

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ccc92a45394a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('eca_tr')
    op.drop_table('player_seasons')
    op.drop_table('players_scd')
    op.drop_table('medals')
    op.drop_table('vertices')
    op.drop_table('session_analysis')
    op.drop_table('company_profiles')
    op.drop_table('users_cumulated')
    op.drop_table('processed_events')
    op.drop_table('science_service_analysis_categories')
    op.drop_table('medals_matches_players')
    op.drop_table('hosts_cumulated')
    op.drop_table('host_activity_reduced')
    op.drop_table('maps')
    op.drop_table('fmp_daily_stock_data')
    op.drop_table('game_details')
    op.drop_table('games')
    op.drop_table('array_metrics')
    op.drop_table('users')
    op.drop_table('violet_sc_classes_2025_04_10')
    op.drop_table('science_service_analysis_grades')
    op.drop_table('arena')
    op.drop_table('sc_connection_dbo_f_job')
    op.drop_table('science_service_analysis_courses')
    op.drop_table('user_devices_cumulated')
    op.drop_table('device_hits_dashboard')
    op.drop_table('matches')
    op.drop_table('actors_history_scd')
    op.drop_table('fct_game_details')
    op.drop_table('players')
    op.drop_table('events')
    op.drop_table('players2')
    op.drop_table('science_service_analysis_semesters')
    op.drop_table('processed_events_aggregated_source')
    op.drop_table('users_growth_accounting')
    op.drop_table('match_details')
    op.drop_table('actors')
    op.drop_table('teams')
    op.drop_table('devices')
    op.drop_table('edges')
    op.drop_table('processed_events_aggregated')
    op.drop_table('actor_films')
    op.add_column('user', sa.Column('user_type', sa.String(length=20), nullable=True))
    op.add_column('user', sa.Column('company_name', sa.String(length=150), nullable=True))
    op.add_column('user', sa.Column('company_description', sa.Text(), nullable=True))
    op.add_column('user', sa.Column('industry', sa.String(length=100), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('user', 'industry')
    op.drop_column('user', 'company_description')
    op.drop_column('user', 'company_name')
    op.drop_column('user', 'user_type')
    op.create_table('actor_films',
    sa.Column('actor', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('actorid', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('film', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('year', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('votes', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('rating', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('filmid', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('actorid', 'filmid', name='actor_films_pkey')
    )
    op.create_table('processed_events_aggregated',
    sa.Column('event_hour', postgresql.TIMESTAMP(precision=3), autoincrement=False, nullable=True),
    sa.Column('host', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('num_hits', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_table('edges',
    sa.Column('subject_identifier', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('subject_type', postgresql.ENUM('player', 'team', 'game', name='vertex_type'), autoincrement=False, nullable=False),
    sa.Column('object_identifier', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('object_type', postgresql.ENUM('player', 'team', 'game', name='vertex_type'), autoincrement=False, nullable=False),
    sa.Column('edge_type', postgresql.ENUM('plays_against', 'shares_team', 'plays_in', 'plays_on', name='edge_type'), autoincrement=False, nullable=False),
    sa.Column('properties', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('subject_identifier', 'subject_type', 'object_identifier', 'object_type', 'edge_type', name='edges_pkey')
    )
    op.create_table('devices',
    sa.Column('device_id', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('browser_type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('browser_version_major', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('browser_version_minor', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('browser_version_patch', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('device_type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('device_version_major', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('device_version_minor', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('device_version_patch', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('os_type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('os_version_major', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('os_version_minor', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('os_version_patch', sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.create_table('teams',
    sa.Column('league_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('team_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('min_year', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('max_year', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('abbreviation', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('nickname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('yearfounded', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('city', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('arena', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('arenacapacity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('owner', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('generalmanager', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('headcoach', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('dleagueaffiliation', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('actors',
    sa.Column('actor', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('actorid', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('films', sa.NullType(), autoincrement=False, nullable=True),
    sa.Column('quality_class', postgresql.ENUM('star', 'good', 'average', 'bad', name='quality_class'), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('current_year', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('actorid', 'current_year', name='actors_pkey')
    )
    op.create_table('match_details',
    sa.Column('match_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('player_gamertag', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('previous_spartan_rank', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('spartan_rank', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('previous_total_xp', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_xp', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('previous_csr_tier', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('previous_csr_designation', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('previous_csr', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('previous_csr_percent_to_next_tier', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('previous_csr_rank', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('current_csr_tier', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('current_csr_designation', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('current_csr', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('current_csr_percent_to_next_tier', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('current_csr_rank', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('player_rank_on_team', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('player_finished', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('player_average_life', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('player_total_kills', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('player_total_headshots', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('player_total_weapon_damage', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('player_total_shots_landed', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('player_total_melee_kills', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('player_total_melee_damage', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('player_total_assassinations', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('player_total_ground_pound_kills', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('player_total_shoulder_bash_kills', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('player_total_grenade_damage', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('player_total_power_weapon_damage', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('player_total_power_weapon_grabs', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('player_total_deaths', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('player_total_assists', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('player_total_grenade_kills', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('did_win', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('team_id', sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.create_table('users_growth_accounting',
    sa.Column('user_id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('first_active_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('last_active_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('daily_active_state', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('weekly_active_state', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('dates_active', postgresql.ARRAY(sa.DATE()), autoincrement=False, nullable=True),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('user_id', 'date', name='users_growth_accounting_pkey')
    )
    op.create_table('processed_events_aggregated_source',
    sa.Column('event_hour', postgresql.TIMESTAMP(precision=3), autoincrement=False, nullable=True),
    sa.Column('host', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('referrer', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('num_hits', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_table('science_service_analysis_semesters',
    sa.Column('semester', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Student Faculty(s)', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('courses', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('enrollment', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('entries', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('science_students', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('science_graded', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('science_dfw', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('non_science_students', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('non_science_graded', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('non_science_dfw', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('graded', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('dfw', sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.create_table('players2',
    sa.Column('player_name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('height', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('college', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('country', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('draft_year', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('draft_round', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('draft_number', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('seasons', sa.NullType(), autoincrement=False, nullable=True),
    sa.Column('scoring_class', postgresql.ENUM('star', 'good', 'average', 'bad', name='scoring_class'), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('current_season', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('player_name', 'current_season', name='players2_pkey')
    )
    op.create_table('events',
    sa.Column('url', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('referrer', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('device_id', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('host', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('event_time', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('players',
    sa.Column('player_name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('height', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('college', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('country', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('draft_year', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('draft_round', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('draft_number', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('seasons_stats', sa.NullType(), autoincrement=False, nullable=True),
    sa.Column('scoring_class', postgresql.ENUM('star', 'good', 'average', 'bad', name='scoring_class'), autoincrement=False, nullable=True),
    sa.Column('years_since_last_season', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('current_season', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('player_name', 'current_season', name='players_pkey')
    )
    op.create_table('fct_game_details',
    sa.Column('dim_game_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('dim_season', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('dim_team_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('dim_player_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('dim_player_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('dim_start_position', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('dim_is_playing_at_home', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('dim_did_not_play', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('dim_did_not_dress', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('dim_not_with_team', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('m_minutes', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('m_fgm', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('m_fga', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('m_fg3m', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('m_fg3a', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('m_ftm', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('m_fta', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('m_oreb', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('m_dreb', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('m_reb', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('m_ast', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('m_stl', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('m_blk', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('m_turnovers', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('m_pf', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('m_pts', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('m_plus_minus', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('dim_game_date', 'dim_team_id', 'dim_player_id', name='fct_game_details_pkey')
    )
    op.create_table('actors_history_scd',
    sa.Column('actor', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('actorid', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('quality_class', postgresql.ENUM('star', 'good', 'average', 'bad', name='quality_class'), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('start_date', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('end_date', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('actorid', 'start_date', name='actors_history_scd_pkey')
    )
    op.create_table('matches',
    sa.Column('match_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('mapid', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_team_game', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('playlist_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('game_variant_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_match_over', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('completion_date', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('match_duration', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('game_mode', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('map_variant_id', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('device_hits_dashboard',
    sa.Column('aggregation_level', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('os_type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('device_type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('browser_type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('number_of_hits', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_table('user_devices_cumulated',
    sa.Column('user_id', sa.NUMERIC(), autoincrement=False, nullable=False),
    sa.Column('browser_type', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('device_activity_datelist', postgresql.ARRAY(sa.DATE()), autoincrement=False, nullable=True),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('user_id', 'browser_type', 'date', name='user_devices_cumulated_pkey')
    )
    op.create_table('science_service_analysis_courses',
    sa.Column('course_department', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('subject', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('course_level', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('subject_catalog', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('strm_class_dkey', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('enrollment', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Student Faculty(s)', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('semester', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('entries', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('science_students', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('science_graded', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('science_dfw', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('non_science_students', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('non_science_graded', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('non_science_dfw', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('graded', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('dfw', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('sc_connection_dbo_f_job',
    sa.Column('person_key', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('emplid', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('jobcode_desc', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('position_business_title', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('empl_class_desc', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('hr_status', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('job_indicator', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('effective_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('employment_service_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('last_job_start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('expected_end_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('leave_start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('leave_type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('expected_return_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('dept_id', sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.create_table('arena',
    sa.Column('team', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('city_and_state', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('arena', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('capacity', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('coordinates', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('year_built', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('head_coach', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('science_service_analysis_grades',
    sa.Column('course_department', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('subject', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('course_level', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('service', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('course_grade_official', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('courses', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('enrollment', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('entries', sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.create_table('violet_sc_classes_2025_04_10',
    sa.Column('term', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('term_desc', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('term_begin_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('academic_group_desc', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('academic_organization_desc', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('subject', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('catalog_nbr', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('class_desc', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('component_desc', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('class_section', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('class_type_desc', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('instruction_mode_desc', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('enrollment', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_enrollment', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('emplid', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('instructor_role', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('class_room', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('total_average', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('count_graded', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('graded_average', sa.REAL(), autoincrement=False, nullable=True)
    )
    op.create_table('users',
    sa.Column('user_id', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('count', sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.create_table('array_metrics',
    sa.Column('user_id', sa.NUMERIC(), autoincrement=False, nullable=False),
    sa.Column('month_start', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('metric_name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('metric_array', postgresql.ARRAY(sa.REAL()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('user_id', 'month_start', 'metric_name', name='array_metrics_pkey')
    )
    op.create_table('games',
    sa.Column('game_date_est', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('game_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('game_status_text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('home_team_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('visitor_team_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('season', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('team_id_home', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('pts_home', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('fg_pct_home', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('ft_pct_home', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('fg3_pct_home', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('ast_home', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('reb_home', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('team_id_away', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('pts_away', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('fg_pct_away', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('ft_pct_away', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('fg3_pct_away', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('ast_away', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('reb_away', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('home_team_wins', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('game_id', name='games_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('game_details',
    sa.Column('game_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('team_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('team_abbreviation', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('team_city', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('player_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('player_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('nickname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('start_position', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('comment', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('min', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('fgm', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('fga', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('fg_pct', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('fg3m', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('fg3a', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('fg3_pct', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('ftm', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('fta', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('ft_pct', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('oreb', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('dreb', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('reb', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('ast', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('stl', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('blk', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('TO', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('pf', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('pts', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('plus_minus', sa.REAL(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.game_id'], name='game_details_game_id_fkey')
    )
    op.create_table('fmp_daily_stock_data',
    sa.Column('symbol', sa.VARCHAR(length=20), autoincrement=False, nullable=False, comment='Stock ticker symbol, primary key.'),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='Company name.'),
    sa.Column('price', sa.NUMERIC(precision=19, scale=4), autoincrement=False, nullable=True, comment='Current trading price.'),
    sa.Column('changespercentage', sa.NUMERIC(precision=10, scale=4), autoincrement=False, nullable=True, comment='Percentage change in price for the day.'),
    sa.Column('change', sa.NUMERIC(precision=19, scale=4), autoincrement=False, nullable=True, comment='Absolute change in price for the day.'),
    sa.Column('daylow', sa.NUMERIC(precision=19, scale=4), autoincrement=False, nullable=True),
    sa.Column('dayhigh', sa.NUMERIC(precision=19, scale=4), autoincrement=False, nullable=True),
    sa.Column('yearhigh', sa.NUMERIC(precision=19, scale=4), autoincrement=False, nullable=True),
    sa.Column('yearlow', sa.NUMERIC(precision=19, scale=4), autoincrement=False, nullable=True),
    sa.Column('marketcap', sa.BIGINT(), autoincrement=False, nullable=True, comment='Total market capitalization.'),
    sa.Column('priceavg50', sa.NUMERIC(precision=19, scale=4), autoincrement=False, nullable=True, comment='50-day simple moving average of price.'),
    sa.Column('priceavg200', sa.NUMERIC(precision=19, scale=4), autoincrement=False, nullable=True, comment='200-day simple moving average of price.'),
    sa.Column('exchange', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('volume', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('avgvolume', sa.NUMERIC(precision=20, scale=4), autoincrement=False, nullable=True),
    sa.Column('open_price', sa.NUMERIC(precision=19, scale=4), autoincrement=False, nullable=True, comment='Opening price for the day (renamed from "open" in source).'),
    sa.Column('previousclose', sa.NUMERIC(precision=19, scale=4), autoincrement=False, nullable=True),
    sa.Column('eps', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True, comment='Earnings Per Share.'),
    sa.Column('pe', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True, comment='Price to Earnings ratio.'),
    sa.Column('sharesoutstanding', sa.BIGINT(), autoincrement=False, nullable=True, comment='Total number of shares outstanding.'),
    sa.Column('quote_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True, comment='Epoch timestamp representing when the quote data was generated/valid.'),
    sa.Column('data_load_date', sa.DATE(), server_default=sa.text('CURRENT_DATE'), autoincrement=False, nullable=False, comment='Date when this record was inserted into the table.'),
    sa.PrimaryKeyConstraint('symbol', 'data_load_date', name='fmp_daily_stock_data_pkey')
    )
    op.create_table('maps',
    sa.Column('mapid', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('host_activity_reduced',
    sa.Column('host', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('month', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('hit_array', postgresql.ARRAY(sa.INTEGER()), autoincrement=False, nullable=True),
    sa.Column('unique_visitors', postgresql.ARRAY(sa.INTEGER()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('month', 'host', name='host_activity_reduced_pkey')
    )
    op.create_table('hosts_cumulated',
    sa.Column('host', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('host_activity_datelist', postgresql.ARRAY(sa.DATE()), autoincrement=False, nullable=True),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('host', 'date', name='hosts_cumulated_pkey')
    )
    op.create_table('medals_matches_players',
    sa.Column('match_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('player_gamertag', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('medal_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('count', sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.create_table('science_service_analysis_categories',
    sa.Column('course_department', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('subject', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('course_level', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Student Faculty(s)', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('courses', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('enrollment', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('entries', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('science_students', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('science_graded', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('science_dfw', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('non_science_students', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('non_science_graded', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('non_science_dfw', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('graded', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('dfw', sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.create_table('processed_events',
    sa.Column('ip', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('event_timestamp', postgresql.TIMESTAMP(precision=3), autoincrement=False, nullable=True),
    sa.Column('referrer', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('host', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('geodata', sa.VARCHAR(), autoincrement=False, nullable=True)
    )
    op.create_table('users_cumulated',
    sa.Column('user_id', sa.NUMERIC(), autoincrement=False, nullable=False),
    sa.Column('dates_active', postgresql.ARRAY(sa.DATE()), autoincrement=False, nullable=True),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('user_id', 'date', name='users_cumulated_pkey')
    )
    op.create_table('company_profiles',
    sa.Column('symbol', sa.VARCHAR(length=20), autoincrement=False, nullable=False, comment='Stock ticker symbol, primary key.'),
    sa.Column('price', sa.NUMERIC(precision=19, scale=4), autoincrement=False, nullable=True),
    sa.Column('beta', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('volavg', sa.NUMERIC(precision=20, scale=4), autoincrement=False, nullable=True),
    sa.Column('mktcap', sa.BIGINT(), autoincrement=False, nullable=True, comment='Market capitalization.'),
    sa.Column('lastdiv', sa.NUMERIC(precision=19, scale=4), autoincrement=False, nullable=True),
    sa.Column('range', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('changes', sa.NUMERIC(precision=19, scale=4), autoincrement=False, nullable=True),
    sa.Column('companyname', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='Full name of the company.'),
    sa.Column('currency', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('cik', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('isin', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('cusip', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('exchange', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('exchangeshortname', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('industry', sa.TEXT(), autoincrement=False, nullable=True, comment='Industry the company belongs to.'),
    sa.Column('website', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ceo', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('sector', sa.VARCHAR(length=100), autoincrement=False, nullable=True, comment='Sector the company belongs to.'),
    sa.Column('country', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('fulltimeemployees', sa.BIGINT(), autoincrement=False, nullable=True, comment='Number of full-time employees.'),
    sa.Column('phone', sa.VARCHAR(length=30), autoincrement=False, nullable=True),
    sa.Column('address', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('state', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('zip', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('dcfdiff', sa.NUMERIC(precision=19, scale=5), autoincrement=False, nullable=True),
    sa.Column('dcf', sa.NUMERIC(precision=19, scale=5), autoincrement=False, nullable=True),
    sa.Column('image', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ipodate', sa.DATE(), autoincrement=False, nullable=True, comment='Initial Public Offering date.'),
    sa.Column('defaultimage', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('isetf', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('isactivelytrading', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('isadr', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('isfund', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('data_load_date', sa.DATE(), server_default=sa.text('CURRENT_DATE'), autoincrement=False, nullable=False, comment='Date when this record was last updated or inserted.'),
    sa.PrimaryKeyConstraint('symbol', 'data_load_date', name='company_profiles_pkey')
    )
    op.create_table('session_analysis',
    sa.Column('session_start', postgresql.TIMESTAMP(precision=3), autoincrement=False, nullable=True),
    sa.Column('session_end', postgresql.TIMESTAMP(precision=3), autoincrement=False, nullable=True),
    sa.Column('ip', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('host', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('events_count', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_table('vertices',
    sa.Column('identifier', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('type', postgresql.ENUM('player', 'team', 'game', name='vertex_type'), autoincrement=False, nullable=False),
    sa.Column('properties', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('identifier', 'type', name='vertices_pkey')
    )
    op.create_table('medals',
    sa.Column('medal_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('sprite_uri', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sprite_left', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('sprite_top', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('sprite_sheet_width', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('sprite_sheet_height', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('sprite_width', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('sprite_height', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('classification', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('difficulty', sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.create_table('players_scd',
    sa.Column('player_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('scoring_class', postgresql.ENUM('star', 'good', 'average', 'bad', name='scoring_class'), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('start_season', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('end_season', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('current_season', sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.create_table('player_seasons',
    sa.Column('player_name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('age', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('height', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('weight', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('college', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('country', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('draft_year', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('draft_round', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('draft_number', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('gp', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('pts', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('reb', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('ast', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('netrtg', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('oreb_pct', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('dreb_pct', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('usg_pct', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('ts_pct', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('ast_pct', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('season', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('player_name', 'season', name='player_seasons_pkey')
    )
    op.create_table('eca_tr',
    sa.Column('fscc_table_dkey', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('fsct_table_dkey', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('combined_section_dkey', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('strm_class_dkey', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('crse_strm_dkey', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('person_key', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('term', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('term_desc', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('term_calendar_fwps', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('term_type_desc', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('emplid', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Academic_Career Course', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('subject', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('catalog_nbr', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('subject_catalog_nbr', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('subject_catnbr', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Subject_CatNbr w TopicID', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('subject_catnbr_comp', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Subject_CatNbr_Comp w TopicID', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('course_faculty', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('course_department', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('course_servicefaculty', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Student Faculty(s)', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Course Level', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('course_topic_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('course_topic_desc', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('course_topic_desc_short', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('class_section', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('class_description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Multi-Term', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('course_grade_official', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('include_in_gpa', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('earn_credit', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('repeat_scheme_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Course Info', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('course_subject_seq', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('course_subject_taken_seq', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('cntaudit', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('cntwithdrew', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cntfailed', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cntincomplete', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cntgraded', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cntother', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cntcg', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cntdfw', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('indactiveterm', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cntenroledtotal', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cntmultiparta', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('min_term', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('subject_catalog_seq', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('admit_type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('admit_term', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('incoming_class', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Tuition International', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Academic_Career Student', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('fee_amount', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('fee_rate_group', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('coursehaslab', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('combined_section_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('combined_section_desc', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('instruction_mode_key', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('class_count', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('class_weight', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('fct_table_dkey', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('instruction_mode_desc', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('class_roster_seq', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('semester', sa.TEXT(), autoincrement=False, nullable=True)
    )
    # ### end Alembic commands ###
