"""Add notification model to the user table

Revision ID: 4a5d10c39efc
Revises: 1712570344bd
Create Date: 2025-08-09 14:03:47.024064

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4a5d10c39efc'
down_revision = '1712570344bd'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('in_app_notifications')
    op.drop_table('job_application')
    op.drop_table('user_notification_settings')
    op.drop_column('certificate', 'is_public')
    op.drop_column('degree', 'is_public')
    op.drop_column('experience', 'is_public')
    op.drop_column('skill', 'is_public')
    op.drop_column('skill_sources', 'is_public')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('skill_sources', sa.Column('is_public', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('skill', sa.Column('is_public', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('experience', sa.Column('is_public', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('degree', sa.Column('is_public', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('certificate', sa.Column('is_public', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.create_table('user_notification_settings',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('application_status_email', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('application_status_inapp', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('new_job_matches_email', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('new_job_matches_inapp', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('job_application_email', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('job_application_inapp', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='user_notification_settings_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_notification_settings_pkey')
    )
    op.create_table('job_application',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('job_application_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('job_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('applicant_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('cover_letter', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('applied_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['applicant_id'], ['user.id'], name='job_application_applicant_id_fkey'),
    sa.ForeignKeyConstraint(['job_id'], ['job_posting.id'], name='job_application_job_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='job_application_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('in_app_notifications',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('notification_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('is_read', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('related_job_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('related_application_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['related_application_id'], ['job_application.id'], name='in_app_notifications_related_application_id_fkey'),
    sa.ForeignKeyConstraint(['related_job_id'], ['job_posting.id'], name='in_app_notifications_related_job_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='in_app_notifications_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='in_app_notifications_pkey')
    )
    # ### end Alembic commands ###
